diff --git a/src/AppBundle/Api/ApiProblem.php b/src/AppBundle/Api/ApiProblem.php
index 618df9f..2aa72a7 100644
--- a/src/AppBundle/Api/ApiProblem.php
+++ b/src/AppBundle/Api/ApiProblem.php
@@ -7,6 +7,12 @@ namespace AppBundle\Api;
  */
 class ApiProblem
 {
+    const TYPE_VALIDATION_ERROR = 'validation_error';
+
+    private static $titles = array(
+        self::TYPE_VALIDATION_ERROR => 'There was a validation error'
+    );
+
     private $statusCode;
 
     private $type;
@@ -15,11 +21,16 @@ class ApiProblem
 
     private $extraData = array();
 
-    public function __construct($statusCode, $type, $title)
+    public function __construct($statusCode, $type)
     {
         $this->statusCode = $statusCode;
         $this->type = $type;
-        $this->title = $title;
+
+        if (!isset(self::$titles[$type])) {
+            throw new \InvalidArgumentException('No title for type '.$type);
+        }
+
+        $this->title = self::$titles[$type];
     }
 
     public function toArray()
diff --git a/src/AppBundle/Controller/Api/ProgrammerController.php b/src/AppBundle/Controller/Api/ProgrammerController.php
index 3f4bf8f..6b9f856 100644
--- a/src/AppBundle/Controller/Api/ProgrammerController.php
+++ b/src/AppBundle/Controller/Api/ProgrammerController.php
@@ -190,8 +190,7 @@ class ProgrammerController extends BaseController
 
         $apiProblem = new ApiProblem(
             400,
-            'validation_error',
-            'There was a validation error'
+            ApiProblem::TYPE_VALIDATION_ERROR
         );
         $apiProblem->set('errors', $errors);
 
