diff --git a/src/AppBundle/Controller/Api/ProgrammerController.php b/src/AppBundle/Controller/Api/ProgrammerController.php
index 53345be..e9569ef 100644
--- a/src/AppBundle/Controller/Api/ProgrammerController.php
+++ b/src/AppBundle/Controller/Api/ProgrammerController.php
@@ -166,35 +166,4 @@ class ProgrammerController extends BaseController
             'tagLine' => $programmer->getTagLine(),
         );
     }
-
-    private function getErrorsFromForm(FormInterface $form)
-    {
-        $errors = array();
-        foreach ($form->getErrors() as $error) {
-            $errors[] = $error->getMessage();
-        }
-
-        foreach ($form->all() as $childForm) {
-            if ($childForm instanceof FormInterface) {
-                if ($childErrors = $this->getErrorsFromForm($childForm)) {
-                    $errors[$childForm->getName()] = $childErrors;
-                }
-            }
-        }
-
-        return $errors;
-    }
-
-    private function throwApiProblemValidationException(FormInterface $form)
-    {
-        $errors = $this->getErrorsFromForm($form);
-
-        $apiProblem = new ApiProblem(
-            400,
-            ApiProblem::TYPE_VALIDATION_ERROR
-        );
-        $apiProblem->set('errors', $errors);
-
-        throw new ApiProblemException($apiProblem);
-    }
 }
diff --git a/src/AppBundle/Controller/BaseController.php b/src/AppBundle/Controller/BaseController.php
index 3f3c054..afd628a 100644
--- a/src/AppBundle/Controller/BaseController.php
+++ b/src/AppBundle/Controller/BaseController.php
@@ -10,6 +10,7 @@ use AppBundle\Repository\ProjectRepository;
 use AppBundle\Repository\BattleRepository;
 use AppBundle\Repository\ApiTokenRepository;
 use Symfony\Bundle\FrameworkBundle\Controller\Controller;
+use Symfony\Component\Form\FormInterface;
 use Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken;
 use Symfony\Component\HttpFoundation\Request;
 use AppBundle\Entity\User;
@@ -128,4 +129,35 @@ abstract class BaseController extends Controller
 
         return $data;
     }
+
+    protected function throwApiProblemValidationException(FormInterface $form)
+    {
+        $errors = $this->getErrorsFromForm($form);
+
+        $apiProblem = new ApiProblem(
+            400,
+            ApiProblem::TYPE_VALIDATION_ERROR
+        );
+        $apiProblem->set('errors', $errors);
+
+        throw new ApiProblemException($apiProblem);
+    }
+
+    protected function getErrorsFromForm(FormInterface $form)
+    {
+        $errors = array();
+        foreach ($form->getErrors() as $error) {
+            $errors[] = $error->getMessage();
+        }
+
+        foreach ($form->all() as $childForm) {
+            if ($childForm instanceof FormInterface) {
+                if ($childErrors = $this->getErrorsFromForm($childForm)) {
+                    $errors[$childForm->getName()] = $childErrors;
+                }
+            }
+        }
+
+        return $errors;
+    }
 }
