diff --git a/app/config/services.yml b/app/config/services.yml
index 7b9173c..816d58d 100644
--- a/app/config/services.yml
+++ b/app/config/services.yml
@@ -16,3 +16,12 @@ services:
     battle.power_manager:
         class: AppBundle\Battle\PowerManager
         arguments: ['@doctrine.orm.entity_manager']
+<<<<<<< HEAD
+
+    api_exception_listener:
+        class: AppBundle\EventListener\ApiExceptionListener
+        arguments: ['%kernel.debug%']
+        tags:
+            - { name: kernel.event_subscriber }
+=======
+>>>>>>> _tuts/master/errors-extra-information-on-error
diff --git a/src/AppBundle/EventListener/ApiExceptionListener.php b/src/AppBundle/EventListener/ApiExceptionListener.php
index 4c2fbc9..8fa8911 100644
--- a/src/AppBundle/EventListener/ApiExceptionListener.php
+++ b/src/AppBundle/EventListener/ApiExceptionListener.php
@@ -12,14 +12,28 @@ use Symfony\Component\HttpKernel\Exception\HttpExceptionInterface;
 
 class ApiExceptionSubscriber implements EventSubscriberInterface
 {
+    private $debug;
+
+    public function __construct($debug)
+    {
+        $this->debug = $debug;
+    }
+
     public function onKernelException(GetResponseForExceptionEvent $event)
     {
         $e = $event->getException();
 
+        $statusCode = $e instanceof HttpExceptionInterface ? $e->getStatusCode() : 500;
+
+        // allow 500 errors to be thrown
+        if ($this->debug && $statusCode >= 500) {
+            return;
+        }
+
         if ($e instanceof ApiProblemException) {
             $apiProblem = $e->getApiProblem();
         } else {
-            $statusCode = $e instanceof HttpExceptionInterface ? $e->getStatusCode() : 500;
+
 
             $apiProblem = new ApiProblem(
                 $statusCode
