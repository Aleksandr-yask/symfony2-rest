title:  Symfony RESTful API: Episode 1
summary: |    
    In this series, we get to work: by building the same API in the
    [REST series](http://knpuniversity.com/screencast/rest), but leveraging
    all the amazing tools and libraries of the Symfony framework. If terminology
    like representations, resources, and hypermedia are new to you, start
    with the [REST series](http://knpuniversity.com/screencast/rest) and
    then come back. And get ready to get your (API) mind blown.

    In Episode 1, we'll start quick with:

    * Build your first functional POST endpoint
    * Decoding the Request body
    * Using forms to handle incoming data
    * Writing tests for your API
    * Handling data "seeding" for your tests
    * GET, PUT, DELETE and PATCH endpoints
    * Using the JMS Serializer

    The REST of the Symfony Series:
    
    * [Episode 1](http://knpuniversity.com/screencast/symfony-rest)
    * [Episode 2](http://knpuniversity.com/screencast/symfony-rest2)
    * [Episode 3](http://knpuniversity.com/screencast/symfony-rest3)
    * [Episode 4](http://knpuniversity.com/screencast/symfony-rest4)
    * [Episode 5](http://knpuniversity.com/screencast/symfony-rest5)

illustration: rest-sf.png
hasVideoDownload: 0
tuts_hero:
    start_step: "start"
    finish_step: "Serialize: Whitelisting properties"

chapters:
    post:
        is_free: true
        video_key: hdtvaj0m61
    post-json-body:
        is_free: true
        video_key: zvhvfwxbxb
    form-post:
        is_free: true
        video_key: z34rv0afxk
    get-one:
        video_key: s9xdkhrrl3
    tightening-up-response:
        video_key: 2nckk1m101
    get-collection:
        video_key: dwxs1sf36y
    first-test:
        video_key: q3l8rg2cnl
    test-code-reuse:
        video_key: nv5ep70agx
    tests-clear-data:
        video_key: ejpc6p14qx
    mad-test-debugging:
        video_key: 4r4tvldnn2
    property-access-fixtures:
        video_key: 0g6w2d5m6y
    response-asserter:
        video_key: gjn1f5ybd8
    test-database:
        is_finished: false
    put-programmer:
        is_finished: false
    readonly-fields:
        is_finished: false
    delete-programmer:
        is_finished: false
    patch-programmer:
        is_finished: false
    serializer-basics:
        is_finished: false
    centralizing-response:
        is_finished: false
    serializer-control:
        is_finished: false
